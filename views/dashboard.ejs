<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Dashboard</title>
</head>

<body class="bg-body-secondary">
    <section id="navBar">
        <nav class="navbar bg-primary " style="height: 60px;">
            <div class="container-fluid d-flex justify-content-between align-items-center">
                <p class="navbar-brand fs-3 ms-1 d-inline-block text-light ">Lucre &#8208; Cash</p>
                <p class="text-light fs-5 ">Budget for your best life</p>
                <button class="btn btn-sm btn-light me-1 mb-3 py-2 ps-3 pe-3" type="button">Log Out</button>
            </div>
        </nav>
    </section>
    <!-- End of Navbar Section -->

    <!-- Profile Section -->
    <section>
        <div class="container">
            <div class="row">
                <div class="col-md-6 justify-content-center align-items-center">
                    <div class="border rounded-2 mt-4 border-light-subtle bg-body-tertiary" style="height: 610px;">
                        <div id="userProfile" class="border bg-primary m-3 rounded-2"
                            style="height: 160px; width: 520px;">
                            <%- include ('partials/addModal') %>
                                <%- include ('partials/editModal') %>
                                    <p id="username"
                                        class="text-light text-center display-6 fs-3 pt-3 ps-3 text-capitalize"></p>
                                    <p class="text-light text-center display-6 fs-6 pt-1 ps-3">Your Current Financial
                                        Standing : <strong><span id="financialStatus"></span></strong>
                                    </p>
                                    <div class="d-flex justify-content-center">
                                        <button class="btn btn-warning text-light me-5" id="addButton"
                                            data-bs-toggle="modal" data-bs-target="#addList">Add Item</button>
                                        <button type="button" class="btn btn-warning text-light" id="editButton"
                                            data-bs-toggle="modal" data-bs-target="#editList">Edit Item</button>
                                    </div>
                        </div>
                        <div class="border rounded-2 ms-3 me-3 mt-4" style="height:390px; width: 520px;">
                            <p class="display-6 fs-5 text-primary text-center pt-3 ps-3">Your Personal Income Statement
                            </p>
                            <div class="d-flex justify-content-between my-2">
                                <p class="ps-3">Personal Income </p>
                                <p id="displayIncome" class="pe-3">Kshs. </p>
                            </div>
                            <hr>

                            <div class="d-flex justify-content-between my-2">
                                <p class="ps-3">Total Expenses </p>
                                <p id="displayBills" class="pe-3">Kshs. </p>
                            </div>
                            <hr>

                            <div class="d-flex justify-content-between my-2">
                                <p class="ps-3">Debt Repayment </p>
                                <p id="displayDebt" class="pe-3">Kshs. </p>
                            </div>
                            <hr>

                            <div class="d-flex justify-content-between my-2">
                                <p class="ps-3">Your Disposable Income </p>
                                <p id="displayDisposableIncome" class="pe-3">Kshs. </p>
                            </div>
                            <div id="status">

                            </div>
                        </div>
                    </div>
                </div>

                <!-- Graphical Presentation -->
                <div class="col-md-6 border rounded-2 mt-4 border-light-subtle bg-body-tertiary">
                    <div class="mt-3 ps-1 py-2 " style="height: 290px;">
                        <!-- <p class="text-primary text-center pb-2">Visual Representation of your Current Status</p> -->
                        <canvas id="currentStatus"></canvas>
                    </div>
                    <div class="mt-3 ps-5 bg-dark" style=" height:286px">
                        <canvas id="idealStatus"></canvas>
                    </div>
                </div>
            </div>
        </div>

    </section>



</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.2.0/chartjs-plugin-datalabels.min.js" integrity="sha512-JPcRR8yFa8mmCsfrw4TNte1ZvF1e3+1SdGMslZvmrzDYxS69J7J49vkFL8u6u8PlPJK+H3voElBtUCzaXj+6ig==" crossorigin="anonymous" referrerpolicy="no-referrer"></script><script>
    // create a base url that attaches a token to every request
    const url = 'http://localhost:3000'
    const accessToken = localStorage.getItem("key")

    const frontAuth = axios.create({
        baseUrl: url,
        headers: {
            Authorization: `Bearer ${accessToken}`
        }
    })

    // This function takes input from the "addModal" file. And posts them on the /add end-point. 
    // Data validation is incorporated and user redirected to the dashboard. 
    const addForm = () => {
        const addedIncome = document.getElementById('addNetIncome').value
        const addedBills = document.getElementById('addBills').value
        const addedDebt = document.getElementById('addDebt').value

        frontAuth.post(`${url}/add`, {
            Income: addedIncome,
            Expenses: addedBills,
            Debt: addedDebt
        }).then(rs => {
            const message = rs.data[0].message
            if (message == '"Income" must be a number' || message == '"Income" must be greater than or equal to 100') {
                Swal.fire(`${message}`)
            } else if (message == '"Expenses" must be a number') {
                Swal.fire(`${message}`)
            } else if (message == '"Debt" must be a number') {
                Swal.fire(`${message}`)
            } else {
                Swal.fire({
                    icon: 'success',
                    title: 'Details Added',
                    showConfirmButton: false,
                    timer: 1500
                }).then(rs => {
                    // localStorage.setItem("key", `${message}`)
                    window.location = '/dashboard'
                }).catch(err => {
                    console.log(err)
                })
            }
        }).catch(err => {
            console.log(err)
        })
    }

    // takes values from the edit modal and posts them to the /edit endpoint
    const editForm = () => {
        const editedIncome = document.getElementById('editNetIncome').value
        const editedBills = document.getElementById('editBills').value
        const editedDebt = document.getElementById('editDebt').value

        frontAuth.put(`${url}/edit`, {
            Income: editedIncome,
            Expenses: editedBills,
            Debt: editedDebt
        }).then(rs => {
            console.log(rs)
            const message = rs.data[0].message
            if (message == '"Income" must be a number' || message == '"Income" must be greater than or equal to 100') {
                Swal.fire(`${message}`)
            } else if (message == '"Expenses" must be a number') {
                Swal.fire(`${message}`)
            } else if (message == '"Debt" must be a number') {
                Swal.fire(`${message}`)
            } else {
                Swal.fire({
                    icon: 'success',
                    title: 'Saved',
                    showConfirmButton: false,
                    timer: 1500
                }).then(rs => {
                    console.log(rs)
                    window.location = '/dashboard'
                }).catch(err => {
                    console.log(err)
                })
            }
        }).catch(err => {
            console.log(err)
        })
    }

    // displays data on the dashboard
    const displayData = () => {
        frontAuth.post(`${url}/dashboard`).then(rs => {
            // targets the divs that display each financial item
            const showUsername = document.getElementById('username')
            const showIncome = document.getElementById('displayIncome')
            const showBills = document.getElementById('displayBills')
            const showDebt = document.getElementById('displayDebt')
            const showDI = document.getElementById('displayDisposableIncome')


            // targets the div from the profile section and from the disposable income area
            const financialStatus = document.getElementById('financialStatus')
            const status = document.getElementById('status')

            // writes values received from backend
            showUsername.innerHTML = `Hello ${rs.data[0].username}`
            showIncome.innerHTML = `Kshs. ${parseFloat(rs.data[0].totalIncome)}`
            showBills.innerHTML = `Kshs. ${parseFloat(rs.data[0].totalExpenses)}`
            showDebt.innerHTML = `Kshs. ${parseFloat(rs.data[0].totalDebt)}`

            if (rs.data[0].disposableIncome == 0) {
                financialStatus.innerHTML = `<i class="bi bi-circle-fill fs-4" style="color:#ffa500"></i> Average`
                showDI.innerHTML = `<span style="color:orange">Kshs. ${parseFloat(rs.data[0].disposableIncome)}</span>`
                status.innerHTML = `<p style = "color:orange; text-align:center">Your income and expenses are equal. Reduce expenses or increase your income.</p>`

            } else if (rs.data[0].disposableIncome < 0) {
                financialStatus.innerHTML = `<i class="bi bi-circle-fill fs-5" style="color:#ff4433"></i> On the Red`
                showDI.innerHTML = `<span style="color:red">Negative</span>`
                status.innerHTML = `<p style = "color:red; text-align:center">No disposable income. Readjust your expenses.</p>`

            } else {
                financialStatus.innerHTML = `<i class="bi bi-circle-fill fs-5" style="color:#90ee90"></i> Good`
                showDI.innerHTML = `<span style="color:green">Kshs. ${parseFloat(rs.data[0].disposableIncome)}</span>`
                status.innerHTML = `<p style = "color:green; text-align:center">You have enough to save.</p>`

            }

        }).catch(err => {
            console.log(err)
        })
    }
    displayData()


    const graphics = () => {
        const vals = frontAuth.get(`${url}/graphics`).then(rs => {
           const arr = rs.data
           const mp = arr.map(element => {
            return Object.values(element)
            
           });
        //   console.log(currentChartData.data)
        //   console.log(mp[0])
        //   currentChartData.data = mp[0]
          myChart.data.datasets[0].data = mp[0]
        //   console.log(currentChartData.data[0])
        // myChart.data.datasets[0].data = mp
        console.log(myChart.data.datasets[0].data)

       
          myChart.update()
        //    console.log(mp)
        })
        // ChartJs Setup
    const currentChart = document.getElementById('currentStatus');

const currentChartData = {
    labels: ["Expenses", "Debt", "Disposable Income"],
    data: [30000,10000,5000],
};


//    Chart configuration
const myChart = new Chart(currentChart, {
    type: "doughnut",
    data: {
        labels: currentChartData.labels,
        datasets: [
            {
                label: "Financial Status",
                data: currentChartData.data
            },
        ],
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            title: {
                display: true,
                color: '#0d6efd',
                text: 'Visual Representation of your Current Status',
                font: {
                    size: 16
                }
            },
            legend: {
                align: 'center',
                // maxWidth: 300,
                position: 'right',
                labels: {
                    padding: 15,
                    // font: {
                    //     size: 16
                    // }
                },

            },
            datalabels : {
                color: "#ffffff",
            },

        },
    },
    plugins : [ChartDataLabels]
});

    }
    
    graphics()
</script>